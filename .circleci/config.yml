general:
  branches:
    ignore:
      - master # list of branches to ignore
      - /release\/.*/ # or ignore regexes
  artifacts:
      - "test"
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.09.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip
            pip install \
              docker-compose==1.16.1 \
              awscli==1.11.76
# loading and saving cache seems to take longer than building. better off speeding up build
#      - restore_cache:
#          keys:
#            - v1-{{ .Branch }}
#          paths:
#            - /caches/app.tar
#      - run:
#          name: Load Docker image layer cache
#          command: |
#            set +o pipefail
#            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=robot_tests -t robot_tests . || (docker build --cache-from=robot_tests -t robot_tests -f Dockerfile-bootstrap .; docker build --cache-from=robot_tests -t robot_tests .)
#      - run:
#          name: Save Docker image layer cache
#          command: |
#            docker rm $(docker ps -a -f status=exited -q) || true
#            docker rmi $(docker images -f dangling=true -q) || true
#            mkdir -p /caches
#            docker save -o /caches/app.tar robot_tests
#      - save_cache:
#          key: v1-{{ .Branch }}-{{ epoch }}
#          paths:
#            - /caches/app.tar
      - run:
          name: Run tests
          no_output_timeout: 1200
          command: |
            export NODES=1 VIDEO=false
            mkdir -p test; chown 1000:1000 test; ls -al test
            docker-compose -f docker-compose.test.yml -p grid up -d hub chrome
            docker exec grid_hub_1 wait_all_done 30s
            docker exec grid_chrome_1 wait_all_done 30s
            docker-compose -f docker-compose.test.yml -p grid up --abort-on-container-exit --exit-code-from=plominotest plominotest
      - run:
          name: Clean up tests
          command: |
            docker-compose -f docker-compose.test.yml -p grid down
#TODO: get test output into a data volume and copy it out before close down